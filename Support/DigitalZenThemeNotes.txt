Development Plan
	Infrastructure
	Core Functionality
	Merging of other themes
	Testing, Polishing, Validation of requirements
	Enhancements, Optimizations
	Publish	On Github, WordPress

	infrastructure
		ignore file.
		standard license
		blank screen shot
		README.md
		.editorconfig
		workspace file
		npm & composer
		phpdoc
		phpunit
		build tools
			grunt
			minify
			scss
		pipelines
	_s theme
	boilerplate
	bootstrap
	other packages?
	sniffs and warnings, theme checkers, etc
	merge of existing themes
		child themes
	optimizations
		seo
		social media
	customizations
		admin options
	Bootstrap theme	Far from perfect, lots of warnings
		Dzw-Bootstrap-Child
		Psynary
		Inferret
		Start from _s?	I think too much work in the given timeframe
		DigitalZen	Just too much in infancy
		Dzw-Custom
Resources
	Please visit the following links to learn more about translating WordPress themes:
		https://make.wordpress.org/polyglots/teams/
		https://developer.wordpress.org/themes/functionality/localization/
		https://developer.wordpress.org/reference/functions/load_theme_textdomain/
		https://github.com/Automattic/_s

		https://themetest.wordpress.com/

		https://developer.wordpress.com/themes/
		https://make.wordpress.org/themes/handbook/review/required/
		https://make.wordpress.org/themes/2013/11/10/guidelines-shouldnt-fail-a-theme/
		https://make.wordpress.org/core/handbook/best-practices/coding-standards/

		https://developer.wordpress.org/themes/getting-started/
		https://developer.wordpress.org/themes/getting-started/theme-development-examples/
		http://underscores.me/
		https://developer.wordpress.com/themes/
		https://make.wordpress.org/themes/handbook/review/required/
		https://codex.wordpress.org/Theme_Unit_Test
		https://www.taniarascia.com/developing-a-wordpress-theme-from-scratch/
		https://my.studiopress.com/themes/genesis/
	Child Themes
		https://www.smashingmagazine.com/2016/01/create-customize-wordpress-child-theme/
		https://developer.wordpress.org/themes/advanced-topics/child-themes/
Notes
	CustomLogo
		Install
			The custom logo support should be added first to your theme using add_theme_support(), and then be called in your theme using the_custom_logo()

			To enable the use of a custom logo in your theme, add the following to your functions.php file:
				add_theme_support( 'custom-logo' );
				function themename_custom_logo_setup() {
				 $defaults = array(
				 'height'      => 100,
				 'width'       => 400,
				 'flex-height' => true,
				 'flex-width'  => true,
				 'header-text' => array( 'site-title', 'site-description' ),
				 );
				 add_theme_support( 'custom-logo', $defaults );
				}
				add_action( 'after_setup_theme', 'themename_custom_logo_setup' );
		Display
		$custom_logo_id = get_theme_mod( 'custom_logo' );
		$image = wp_get_attachment_image_src( $custom_logo_id , 'full' );
		echo $image[0];

		if ( function_exists( 'the_custom_logo' ) ) {
		 the_custom_logo();
		}
	Language Activation
		#qtransLangSw?AL&title=none&flags=all&names=hidden&current=hidden
		#qtransLangSw?title=none&names=hidden&current=hidden
		Activated qTranslate-Xt plugin	**Manual step
		Set plugin settings	**Manual step
			languages
			permalinks
	Commands
		composer lint:wpcs
		composer lint:php
		composer make-pot
		wp i18n make-pot . languages/_s.pot
		npm run compile:css
		node-sass assets/css/sass/ -o assets/css && stylelint '*.css' --fix || true && stylelint '*.css' --fix

		npm run compile:rtl : generates an RTL stylesheet.
		npm run watch : watches all SASS files and recompiles them to css when they change.
		npm run lint:scss : checks all SASS files against CSS Coding Standards.
		npm run lint:js : checks all JavaScript files against JavaScript Coding Standards.
		npm run bundle : generates a .zip archive for distribution, excluding development and system files.
	Coding Styles
		npm install @wordpress/stylelint-config
		npm i stylelint-config-wordpress
		npm remove @wordpress/stylelint-config
		composer require --dev dealerdirect/phpcodesniffer-composer-installer
	Additional Code
			modified:   assets/css/main.css
			modified:   ruleset.xml

			// prevent reformatting of the text
			remove_filter( 'the_content', 'wpautop' );
			remove_filter( 'the_excerpt', 'wpautop' );

			add_theme_support('menus' );

			add_action('init', 'disable_wp_emojicons' );

			remove_action('wp_head', 'wp_generator');

			add_action('pre_get_posts', 'post_queries' );

			// Remove the Link header for the WP REST API
			// [link] => <http://www.example.com/wp-json/>; rel="https://api.w.org/"
			remove_action('template_redirect', 'rest_output_link_header', 11, 0);
			add_action('after_setup_theme', 'remove_json_api');

			// remove contact form's unnessary css from all pages
			add_action('wp_enqueue_scripts', 'deregister_contactform_script',
				PHP_INT_MAX);
			add_action('after_setup_theme', 'deregister_contactform_script');

			add_action('wp_enqueue_scripts', 'deregister_embed_script');

			add_filter('show_admin_bar', '__return_false');

				add_action('init', 'disable_wp_emojicons');

				// remove Open Sans font
				add_action('wp_enqueue_scripts', 'deregister_styles', 100);

			function clean_yoast()
			{
				// Sets the canonical link to the page url
				add_filter('wpseo_canonical', 'wpseo_canonical');

				// Set the meta description for the main page
				add_action('wp', 'home_check');

				// disable yoast next and previous links (broken)
				add_filter('wpseo_next_rel_link', 'wpseo_next_rel_link');
				add_filter('wpseo_prev_rel_link', 'wpseo_prev_rel_link');
			}

			function comment_debug()
			{
				$item = '';
				$post_id = '';

				if (!empty($_SERVER))
				{
					if (array_key_exists('REQUEST_URI', $_SERVER))
					{
						$item = $_SERVER['REQUEST_URI'];
						$item  = trim($item, '/');
					}
				}

				if (!empty($item))
				{
					$post = get_page_by_path($item);

					if (!empty($post))
					{
						$post_id = $post->ID;
					}
				}

				echo "\r\n<!--*****DEBUG: item: $item :: post: $post_id*****-->\r\n";
			}

			function deregister_contactform_script()
			{
				$current_uri = add_query_arg( NULL, NULL );
				$found = strpos($current_uri, "/contact-us/");

				if (false === $found)
				{
					remove_action('wp_enqueue_scripts', 'cntctfrm_wp_head');
				}
			}

			function deregister_embed_script()
			{
				wp_deregister_script('wp-embed');
			}
		Digital Zen Theme
			Remove embedded normalize.css from style.css
			WARNING: Found ><?php echo esc_attr( in posts-support.php. Only use esc_attr() inside HTML attributes. Use esc_html() between HTML tags. A manual review is needed. Line 53: <li><span class='fa fa-file'></span><?php echo esc_attr( $categories ); ?></li>Line 54: <li><span class='fa fa-tags'></span><?php echo esc_attr( $tags ); ?></li>Line 56: <li class='pull-right'><a href='<?php the_permalink(); ?>' class='btn-link'><?php echo esc_attr( $link ); ?></a></li>
			WARNING: fwrite was found in the file platform_check.php File write operations should are avoided unless necessary Line 17: fwrite(STDERR, 'Composer detected issues in your platform:' . PHP_EOL.PHP_E
			WARNING Your theme appears to be in the wrong directory for the theme name. The directory name must match the slug of the theme. This theme's correct slug and text-domain is digitalzen. (If this is a child theme, you can ignore this error.)
			WARNING More than one text-domain is being used in this theme. This means the theme will not be compatible with WordPress.org language packs. The domains found are digital-zen, digitalzen
			REQUIRED: Both DOS and UNIX style line endings were found in the file style.css. This causes a problem with SVN repositories and must be corrected before the theme can be accepted. Please change the file to use only one style of line endings.
			RECOMMENDED: No reference to register_block_style was found in the theme. Theme authors are encouraged to implement new block styles as a transition to block themes.
			RECOMMENDED: No reference to register_block_pattern was found in the theme. Theme authors are encouraged to implement custom block patterns as a transition to block themes.
			RECOMMENDED: No reference to add_theme_support( "wp-block-styles" ) was found in the theme. It is recommended that the theme implement this functionality.
			RECOMMENDED: No reference to add_theme_support( "responsive-embeds" ) was found in the theme. It is recommended that the theme implement this functionality.
			RECOMMENDED: No reference to add_theme_support( "align-wide" ) was found in the theme. It is recommended that the theme implement this functionality.
			RECOMMENDED: No reference to add_editor_style() was found in the theme. It is recommended that the theme implement editor styling, so as to make the editor content match the resulting post output in the theme, for a better user experience.
			INFO: Possible hard-coded links were found in the file footer.php. Line 27: printf( esc_html__( 'Theme: %1$s by %2$s.', 'digitalzen' ), 'digitalzen', '<a href='http://www.digitalzenworks.com'>James John McGuire</a>' );
			INFO: Possible hard-coded links were found in the file footer.php. Line 25: printf( esc_html__( 'Theme: %1$s by %2$s.', 'digital-zen' ), 'digital-zen', '<a href='https://digitalzenworks.com'>James John McGuire</a>' );
				REQUIRED: Your Theme URI and Author URI must not be the same.
				REQUIRED: Found a copy of Underscores. See digitalzen.pot. Learn how to update the files for your own theme. Line 26: msgid 'Hi. I'm a starter theme called <code>_s</code>, or <em>underscores</em>, if
				REQUIRED: Found a copy of Underscores. See digitalzen.pot. Learn how to update the files for your own theme. Line 148: 'Hi. I'm a starter theme called <code>_s</code>, or <em>underscores</em>, if
				REQUIRED: Found a copy of Underscores. See README.md. Learn how to update the files for your own theme. Line 6: Hi. I'm a starter theme called `_s`, or `underscores`, if you like. I'm a t
				REQUIRED: phpcs.xml.dist PHPCS file found. This file must not be in a theme.
				REQUIRED: phpcs.xml.dist ruleset.xml XML file found. This file must not be in a theme.
				REQUIRED: Zip file found. Plugins are not allowed in themes. The zip file found was digitalzentheme.zip digitalzen.zip.

add configuration files, such as vs code workspace
sniffs
unit tests
.editorconfig
ignore files
pot files
composer
grunt
node modules
_s
assets
screen shot
license
readme
google analytics
boilerplate
style.css
funding
file headers

https://developer.wordpress.org/themes/advanced-topics/theme-testing/
https://github.com/WPTT/theme-test-data
https://github.com/WPTT/theme-sniffer
https://github.com/WPTT/WPThemeReview
https://infinum.com/handbook/wordpress/automated-testing-in-wordpress/codeception
https://codex.wordpress.org/Theme_Unit_Test


		$cl_text_domain = PHPCSHelper::get_config_data( 'text_domain' );
		if ($cl_text_domain !== null)
		{
			$cl_text_domain = trim( PHPCSHelper::get_config_data( 'text_domain' ) );
		}

		$cl_prefixes = PHPCSHelper::get_config_data( 'prefixes' );
		if ($cl_prefixes !== null)
		{
			$cl_prefixes = trim( PHPCSHelper::get_config_data( 'text_domain' ) );
		}

