Development Plan
	Infrastructure
	Core Functionality
	Merging of other themes
	Testing, Polishing, Validation of requirements
	Enhancements, Optimizations
	Publish	On Github, WordPress

	Infrastructure
		ignore file.
		standard license
		blank screen shot
		README.md
		.editorconfig
		workspace file *
		npm & composer ?
		phpdoc
		phpunit
		build tools
			grunt
			node modules
			minify
			scss
		pipelines
		sniffs and warnings, theme checkers, etc
		unit tests
	Core Functionality
		_s theme
		boilerplate
		bootstrap
	style.css
	pot files
	assets
	other packages?
	Merging of other themes
		merge of existing themes
			child themes
	optimizations
		seo
		social media
	customizations
		admin options
	google analytics
	Merge variant themes
		Dzw-Bootstrap-Child
		Psynary
		Inferret
		Start from _s?	I think too much work in the given timeframe
		DigitalZen	Just too much in infancy
		Dzw-Custom
	funding
	file headers
Tasks
	add npm update to build.cmd
	https://github.com/jamesjohnmcguire/DigitalZenWorksTheme/security/dependabot
	dart sass
Notes
	CustomLogo
		Install
			The custom logo support should be added first to your theme using add_theme_support(), and then be called in your theme using the_custom_logo()

			To enable the use of a custom logo in your theme, add the following to your functions.php file:
				add_theme_support( 'custom-logo' );
				function themename_custom_logo_setup() {
				 $defaults = array(
				 'height'      => 100,
				 'width'       => 400,
				 'flex-height' => true,
				 'flex-width'  => true,
				 'header-text' => array( 'site-title', 'site-description' ),
				 );
				 add_theme_support( 'custom-logo', $defaults );
				}
				add_action( 'after_setup_theme', 'themename_custom_logo_setup' );
		Display
		$custom_logo_id = get_theme_mod( 'custom_logo' );
		$image = wp_get_attachment_image_src( $custom_logo_id , 'full' );
		echo $image[0];

		if ( function_exists( 'the_custom_logo' ) ) {
		 the_custom_logo();
		}
	Language Activation
		#qtransLangSw?AL&title=none&flags=all&names=hidden&current=hidden
		#qtransLangSw?title=none&names=hidden&current=hidden
		Activated qTranslate-Xt plugin	**Manual step
		Set plugin settings	**Manual step
			languages
			permalinks
	Commands
		composer lint:wpcs
		composer lint:php
		composer make-pot
		wp i18n make-pot . languages/_s.pot
		npm run compile:css
		node-sass assets/css/sass/ -o assets/css && stylelint '*.css' --fix || true && stylelint '*.css' --fix

		npm run compile:rtl : generates an RTL stylesheet.
		npm run watch : watches all SASS files and recompiles them to css when they change.
		npm run lint:scss : checks all SASS files against CSS Coding Standards.
		npm run lint:js : checks all JavaScript files against JavaScript Coding Standards.
		npm run bundle : generates a .zip archive for distribution, excluding development and system files.
	Coding Styles
		npm install @wordpress/stylelint-config
		npm i stylelint-config-wordpress
		npm remove @wordpress/stylelint-config
		composer require --dev dealerdirect/phpcodesniffer-composer-installer
	Additional Code
			modified:   assets/css/main.css
			modified:   ruleset.xml

			// prevent reformatting of the text
			remove_filter( 'the_content', 'wpautop' );
			remove_filter( 'the_excerpt', 'wpautop' );

			add_theme_support('menus' );

			add_action('init', 'disable_wp_emojicons' );

			remove_action('wp_head', 'wp_generator');

			add_action('pre_get_posts', 'post_queries' );

			// Remove the Link header for the WP REST API
			// [link] => <http://www.example.com/wp-json/>; rel="https://api.w.org/"
			remove_action('template_redirect', 'rest_output_link_header', 11, 0);
			add_action('after_setup_theme', 'remove_json_api');

			// remove contact form's unnessary css from all pages
			add_action('wp_enqueue_scripts', 'deregister_contactform_script',
				PHP_INT_MAX);
			add_action('after_setup_theme', 'deregister_contactform_script');

			add_action('wp_enqueue_scripts', 'deregister_embed_script');

			add_filter('show_admin_bar', '__return_false');

				add_action('init', 'disable_wp_emojicons');

				// remove Open Sans font
				add_action('wp_enqueue_scripts', 'deregister_styles', 100);

			function clean_yoast()
			{
				// Sets the canonical link to the page url
				add_filter('wpseo_canonical', 'wpseo_canonical');

				// Set the meta description for the main page
				add_action('wp', 'home_check');

				// disable yoast next and previous links (broken)
				add_filter('wpseo_next_rel_link', 'wpseo_next_rel_link');
				add_filter('wpseo_prev_rel_link', 'wpseo_prev_rel_link');
			}

			function comment_debug()
			{
				$item = '';
				$post_id = '';

				if (!empty($_SERVER))
				{
					if (array_key_exists('REQUEST_URI', $_SERVER))
					{
						$item = $_SERVER['REQUEST_URI'];
						$item  = trim($item, '/');
					}
				}

				if (!empty($item))
				{
					$post = get_page_by_path($item);

					if (!empty($post))
					{
						$post_id = $post->ID;
					}
				}

				echo "\r\n<!--*****DEBUG: item: $item :: post: $post_id*****-->\r\n";
			}

			function deregister_contactform_script()
			{
				$current_uri = add_query_arg( NULL, NULL );
				$found = strpos($current_uri, "/contact-us/");

				if (false === $found)
				{
					remove_action('wp_enqueue_scripts', 'cntctfrm_wp_head');
				}
			}

			function deregister_embed_script()
			{
				wp_deregister_script('wp-embed');
			}
	Text Domains
		$cl_text_domain = PHPCSHelper::get_config_data( 'text_domain' );
		if ($cl_text_domain !== null)
		{
			$cl_text_domain = trim( PHPCSHelper::get_config_data( 'text_domain' ) );
		}

		$cl_prefixes = PHPCSHelper::get_config_data( 'prefixes' );
		if ($cl_prefixes !== null)
		{
			$cl_prefixes = trim( PHPCSHelper::get_config_data( 'text_domain' ) );
		}
Issues
	Npm Update
		npm update
		npm WARN EBADENGINE Unsupported engine {
		npm WARN EBADENGINE   package: 'eslint-plugin-jsdoc@36.1.1',
		npm WARN EBADENGINE   required: { node: '^12 || ^14 || ^16' },
		npm WARN EBADENGINE   current: { node: 'v19.7.0', npm: '9.6.1' }
		npm WARN EBADENGINE }
		npm WARN EBADENGINE Unsupported engine {
		npm WARN EBADENGINE   package: '@es-joy/jsdoccomment@0.10.8',
		npm WARN EBADENGINE   required: { node: '^12 || ^14 || ^16' },
		npm WARN EBADENGINE   current: { node: 'v19.7.0', npm: '9.6.1' }
		npm WARN EBADENGINE }
		npm WARN deprecated urix@0.1.0: Please see https://github.com/lydell/urix#deprecated
		npm WARN deprecated chokidar@2.1.8: Chokidar 2 does not receive security updates since 2019. Upgrade to chokidar 3 with 15x fewer dependencies
		npm WARN deprecated resolve-url@0.2.1: https://github.com/lydell/resolve-url#deprecated
		npm WARN deprecated querystring@0.2.0: The querystring API is considered Legacy. new code should use the URLSearchParams API instead.
		npm WARN deprecated @stylelint/postcss-css-in-js@0.37.3: Package no longer supported. Contact Support at https://www.npmjs.com/support for more info.

		npm ERR! code 1
		npm ERR! path C:\Users\JamesMc\Data\Clients\DigitalZenWorks\DigitalZenTheme\SourceCode\node_modules\deasync
		npm ERR! command failed
		npm ERR! command C:\WINDOWS\system32\cmd.exe /d /s /c node ./build.js
		npm ERR! gyp info it worked if it ends with ok
		npm ERR! gyp info using node-gyp@8.4.1
		npm ERR! gyp info using node@19.7.0 | win32 | x64
		npm ERR! gyp info find Python using Python version 3.11.2 found at "C:\Util\Python\python.exe"
Resources
	Please visit the following links to learn more about translating WordPress themes:
		https://make.wordpress.org/polyglots/teams/
		https://developer.wordpress.org/themes/functionality/localization/
		https://developer.wordpress.org/reference/functions/load_theme_textdomain/
		https://github.com/Automattic/_s

		https://themetest.wordpress.com/

		https://developer.wordpress.com/themes/
		https://make.wordpress.org/themes/handbook/review/required/
		https://make.wordpress.org/themes/2013/11/10/guidelines-shouldnt-fail-a-theme/
		https://make.wordpress.org/core/handbook/best-practices/coding-standards/

		https://developer.wordpress.org/themes/getting-started/
		https://developer.wordpress.org/themes/getting-started/theme-development-examples/
		http://underscores.me/
		https://developer.wordpress.com/themes/
		https://make.wordpress.org/themes/handbook/review/required/
		https://codex.wordpress.org/Theme_Unit_Test
		https://www.taniarascia.com/developing-a-wordpress-theme-from-scratch/
		https://my.studiopress.com/themes/genesis/
	Child Themes
		https://www.smashingmagazine.com/2016/01/create-customize-wordpress-child-theme/
		https://developer.wordpress.org/themes/advanced-topics/child-themes/
	wordpress theme unit tests
		https://poweredbycoffee.co.uk/unit-testing-with-wordpress/
		https://www.smashingmagazine.com/2017/12/automated-testing-wordpress-plugins-phpunit/
		https://code.tutsplus.com/articles/the-beginners-guide-to-unit-testing-building-testable-themes--wp-26007
		https://github.com/tommcfarlin/Basic-Theme/blob/master/tests/test_basic_theme.php
		https://wordpress.stackexchange.com/questions/170510/how-exactly-does-unit-testing-work-for-themes
		https://codesymphony.co/writing-wordpress-plugin-unit-tests/
		https://core.trac.wordpress.org/browser/tests/trunk
		https://wptest.io/
		https://infinum.com/handbook/wordpress/automated-testing-in-wordpress/basic-tests-using-phpunit/core-tests
		https://developer.wordpress.org/themes/advanced-topics/theme-testing/
		Testing
			https://developer.wordpress.org/themes/advanced-topics/theme-testing/
			https://github.com/WPTT/theme-test-data
			https://github.com/WPTT/theme-sniffer
			https://github.com/WPTT/WPThemeReview
			https://infinum.com/handbook/wordpress/automated-testing-in-wordpress/codeception
			https://codex.wordpress.org/Theme_Unit_Test
DigitalZen Theme
	Including the "Desktop development with C++" while VS installation.(you can modify existing installation)

	npm config set msbuild_path "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Msbuild\Current\Bin\MSBuild.exe" 

	npm config set msvs_version 2022

	 3.Updating node-gyp
	npm install --save-dev node-sass

	npm install --global windows-build-tools
Issues
	npm update package
	gyp ERR! find VS - missing any Windows SDK 2022
		https://stackoverflow.com/questions/72387953/npm-err-gyp-err-find-vs-msvs-version-not-set-from-command-line-or-npm-config
		https://stackoverflow.com/questions/57541402/node-gyp-configure-got-gyp-err-find-vs
		upgrade package.json
		https://stackoverflow.com/questions/16073603/how-to-update-each-dependency-in-package-json-to-the-latest-version
		`msvs_version` is not a valid npm option
		https://stackoverflow.com/questions/57879150/how-can-i-solve-error-gypgyp-errerr-find-vsfind-vs-msvs-version-not-set-from-c
		gyp verb find VS unknown version "undefined" found at "C:\Program Files\Microsoft Visual Studio\2022\Community"

		In CMD, type set vcinstall file\Microsoft Visual Studio\2022\Community\VC\they did it in https://stackoverflow.com/questions/1679560/using-visual-studio-command-prompt-Tools-overwhere
	Unknown rule                       declaration-property-unit-whitelist         declaration-property-unit-
		npm run compile:css
			https://stackoverflow.com/questions/34896279/how-to-compile-scss-to-css-with-node-sass
	https://github.com/jamesjohnmcguire/DigitalZenWorksTheme/security/dependabot
dependabot alerts
	https://github.com/jamesjohnmcguire/DigitalZenWorksTheme/security/dependabot/30
	No patched version available for ansi-regex
		https://github.com/npm/gauge/issues/135
		https://stackoverflow.com/questions/69590927/how-to-update-nested-package-ansi-regex-for-node-sass-when-npm-audit-fix-upda
Unit Tests
	"10up/wp_mock": "^0.5",
	wordpress theme unit tests
		https://codex.wordpress.org/Theme_Unit_Test
		https://infinum.com/handbook/wordpress/automated-testing-in-wordpress/basic-tests-using-phpunit/unit-testing
Popper
	Currently not needed
		<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js" integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB" crossorigin="anonymous"></script>
Npm
	C:\Program Files\nodejs\;
git switch --orphan <new branch
						"@wordpress/scripts": "^26.0.0",
						"dir-archiver": "^2.1.0",
						"grunt": "^1.6.1",
